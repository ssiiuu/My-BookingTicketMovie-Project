{"ast":null,"code":"import React__default, { createElement } from 'react';\nimport styled from 'styled-components';\n\nlet _ = t => t,\n    _t;\n\nconst StyledCard = styled.div(_t || (_t = _`\n        height: auto;\n        min-width: 100px;\n        padding: 2rem;\n        background: rgba( 255, 255, 255, 0.25 );\n        backdrop-filter: blur(${0});\n        -webkit-backdrop-filter: blur(${0});\n        border-radius: 10px;\n        border: ${0}\n        color: white;\n    `), props => `${props.blur}px`, props => `${props.blur}px`, props => props.border === false ? `none;` : `1px solid rgba( 255, 255, 255, 0.18 );`);\n\nconst Card = props => {\n  console.log(props);\n  return createElement(StyledCard, Object.assign({}, props), props.children && props.children);\n};\n\nlet _$1 = t => t,\n    _t$1;\n\nfunction hexToRgbA(hexCode, opacity) {\n  let hex = hexCode.replace('#', '');\n\n  if (hex.length === 3) {\n    hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\n  }\n\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n  return `rgba(${r},${g},${b},${opacity})`;\n}\n\nconst StyledCustomCard = styled.div(_t$1 || (_t$1 = _$1`\n        height: auto;\n        min-width: 100px;\n        padding: 2rem;\n        background: rgba(255, 255, 255, 0.1);\n        backdrop-filter: blur(${0});\n        -webkit-backdrop-filter: blur(${0});\n        border-radius: ${0};\n        color: ${0};\n        box-shadow: inset 0px 39px 56px -36px rgba(255, 255, 255, 0.5),\n        inset 0px 1px 4px 0px ${0},\n        inset 0px -82px 68px -64px ${0},\n        inset 0px 98px 100px -48px ${0},\n        inset 0px 4px 18px 0px ${0},\n        inset 0px 1px 40px 0px ${0},\n        inset 0px 1px 40px 0px ${0};\n        -webkit-box-shadow: inset 0px 39px 56px -36px rgba(255, 255, 255, 0.5),\n        inset 0px 1px 4px 0px ${0},\n        inset 0px -82px 68px -64px ${0},\n        inset 0px 98px 100px -48px ${0},\n        inset 0px 4px 18px 0px ${0},\n        inset 0px 1px 40px 0px ${0},\n        inset 0px 1px 40px 0px ${0};\n    `), props => `${props.blur}px`, props => `${props.blur}px`, props => `${props.borderRadius ? props.borderRadius : 10}px`, props => `${props.color ? props.color : 'white'}`, props => hexToRgbA(props.effectColor, 0.3), props => hexToRgbA(props.effectColor, 0.3), props => hexToRgbA(props.effectColor, 0.3), props => hexToRgbA(props.effectColor, 0.3), props => hexToRgbA(props.effectColor, 0.2), props => hexToRgbA(props.effectColor, 0.2), props => hexToRgbA(props.effectColor, 0.3), props => hexToRgbA(props.effectColor, 0.3), props => hexToRgbA(props.effectColor, 0.3), props => hexToRgbA(props.effectColor, 0.3), props => hexToRgbA(props.effectColor, 0.2), props => hexToRgbA(props.effectColor, 0.2));\n\nconst CustomCard = props => {\n  console.log(props);\n  return createElement(StyledCustomCard, Object.assign({}, props), props.children && props.children);\n};\n\nlet _$2 = t => t,\n    _t$2;\n\nconst Button = styled.button(_t$2 || (_t$2 = _$2`\n        padding: 0.75rem 1.25rem 0.75rem 1.25rem;\n        margin: 0 auto;\n        background: rgba( 255, 255, 255, 0.25 );\n        backdrop-filter: blur(${0});\n        -webkit-backdrop-filter: blur(${0});\n        border-radius: 5px;\n        border: ${0}\n        font-weight: 800;\n        font-size: 1rem;\n        color: white;\n        transition: 0.3s ease;\n        &:hover {\n            background: rgba( 255, 255, 255, 0.35);\n            cursor: pointer;\n        }\n    `), props => `${props.blur}px`, props => `${props.blur}px`, props => props.border === false ? `none;` : `1px solid rgba( 255, 255, 255, 0.18 );`);\n\nvar index = props => {\n  const {\n    text,\n    onClick\n  } = props;\n  return React__default.createElement(Button, {\n    onClick: () => onClick && onClick()\n  }, text);\n};\n\nexport { index as Button, Card, CustomCard };","map":{"version":3,"mappings":"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","names":["StyledCard","styled","div","_t","props","blur","border","Card","console","log","React","children","hexToRgbA","hexCode","opacity","hex","replace","length","r","parseInt","substring","g","b","StyledCustomCard","_t$1","borderRadius","color","effectColor","CustomCard","Button","button","_t$2","text","onClick"],"sources":["../src/Card/styles.ts","../src/Card/index.tsx","../src/CustomCard/styles.ts","../src/CustomCard/index.tsx","../src/Button/styles.ts","../src/Button/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\ninterface StyledCardProps {\n    border?: boolean,\n    blur?: number,\n}\n\nconst StyledCard = styled.div<StyledCardProps>`\n        height: auto;\n        min-width: 100px;\n        padding: 2rem;\n        background: rgba( 255, 255, 255, 0.25 );\n        backdrop-filter: blur(${(props: StyledCardProps) => `${props.blur}px`});\n        -webkit-backdrop-filter: blur(${(props: StyledCardProps) => `${props.blur}px`});\n        border-radius: 10px;\n        border: ${(props: StyledCardProps) => props.border === false ? `none;` : `1px solid rgba( 255, 255, 255, 0.18 );`}\n        color: white;\n    `\nexport default StyledCard;\n","import * as React from 'react'\nimport StyledCard from './styles';\n\ninterface CardProps {\n  border?: boolean,\n  blur?: number,\n  content?: HTMLElement\n}\n\nconst Card: React.FC<CardProps> = (props) => {\n    console.log(props)\n    return (\n        <StyledCard\n            {...props}\n        >{ props.children && props.children }\n        </StyledCard>\n    )\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\ninterface StyledCustomCardProps {\n    borderRadius?: number,\n    blur?: number,\n    color?: string,\n    effectColor: string,\n}\n\nfunction hexToRgbA(hexCode: string, opacity: number): string {\n    let hex: any = hexCode.replace('#', '');\n\n    if (hex.length === 3) {\n        hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\n    }\n\n    const r = parseInt(hex.substring(0, 2), 16);\n    const g = parseInt(hex.substring(2, 4), 16);\n    const b = parseInt(hex.substring(4, 6), 16);\n\n    return `rgba(${r},${g},${b},${opacity})`;\n}\n\nconst StyledCustomCard = styled.div<StyledCustomCardProps>`\n        height: auto;\n        min-width: 100px;\n        padding: 2rem;\n        background: rgba(255, 255, 255, 0.1);\n        backdrop-filter: blur(${(props: StyledCustomCardProps) => `${props.blur}px`});\n        -webkit-backdrop-filter: blur(${(props: StyledCustomCardProps) => `${props.blur}px`});\n        border-radius: ${(props: StyledCustomCardProps) => `${props.borderRadius ? props.borderRadius : 10}px`};\n        color: ${(props: StyledCustomCardProps) => `${props.color ? props.color : 'white'}`};\n        box-shadow: inset 0px 39px 56px -36px rgba(255, 255, 255, 0.5),\n        inset 0px 1px 4px 0px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.3)},\n        inset 0px -82px 68px -64px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.3)},\n        inset 0px 98px 100px -48px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.3)},\n        inset 0px 4px 18px 0px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.3)},\n        inset 0px 1px 40px 0px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.2)},\n        inset 0px 1px 40px 0px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.2)};\n        -webkit-box-shadow: inset 0px 39px 56px -36px rgba(255, 255, 255, 0.5),\n        inset 0px 1px 4px 0px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.3)},\n        inset 0px -82px 68px -64px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.3)},\n        inset 0px 98px 100px -48px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.3)},\n        inset 0px 4px 18px 0px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.3)},\n        inset 0px 1px 40px 0px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.2)},\n        inset 0px 1px 40px 0px ${(props: StyledCustomCardProps) => hexToRgbA(props.effectColor, 0.2)};\n    `\nexport default StyledCustomCard;\n","import * as React from 'react'\nimport StyledCustomCard from './styles';\n\ninterface CustomCardProps {\n    borderRadius?: number,\n    blur?: number,\n    color?: string,\n    effectColor: string,\n    content?: HTMLElement\n}\n\nconst CustomCard: React.FC<CustomCardProps> = (props) => {\n    console.log(props)\n    return (\n        <StyledCustomCard\n            {...props}\n        >{ props.children && props.children }\n        </StyledCustomCard>\n    )\n};\n\nexport default CustomCard;\n","import styled from 'styled-components';\n\ninterface ButtonProps {\n    border?: boolean,\n    blur?: number,\n}\n\nconst Button = styled.button<ButtonProps>`\n        padding: 0.75rem 1.25rem 0.75rem 1.25rem;\n        margin: 0 auto;\n        background: rgba( 255, 255, 255, 0.25 );\n        backdrop-filter: blur(${(props: ButtonProps) => `${props.blur}px`});\n        -webkit-backdrop-filter: blur(${(props: ButtonProps) => `${props.blur}px`});\n        border-radius: 5px;\n        border: ${(props: ButtonProps) => props.border === false ? `none;` : `1px solid rgba( 255, 255, 255, 0.18 );`}\n        font-weight: 800;\n        font-size: 1rem;\n        color: white;\n        transition: 0.3s ease;\n        &:hover {\n            background: rgba( 255, 255, 255, 0.35);\n            cursor: pointer;\n        }\n    `\nexport default Button;\n","import React from \"react\"\nimport Button from './styles';\n\nexport interface ButtonProps {\n    text?: string,\n    onClick?: () => void\n}\n\nexport default (props: ButtonProps) => {\n    const {text, onClick} = props;\n    return <Button\n                onClick={() => onClick && onClick()}\n            >\n                {text}\n            </Button>\n    }\n"]},"metadata":{},"sourceType":"module"}