{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof3 = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_COLUMN = exports.SELECTION_ALL = void 0;\nexports[\"default\"] = useSelection;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // TODO: warning if use ajax!!!\n\n\nvar SELECTION_COLUMN = {};\nexports.SELECTION_COLUMN = SELECTION_COLUMN;\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\nvar SELECTION_NONE = 'SELECT_NONE';\nexports.SELECTION_NONE = SELECTION_NONE;\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = (0, React.useCallback)(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    var _a; // >>>>>>>>>>> Skip if not exists `rowSelection`\n\n\n    if (!rowSelection) {\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _devWarning[\"default\"])(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.');\n      }\n\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // >>>>>>>>>>> Support selection\n\n\n    var cloneColumns = (0, _toConsumableArray2[\"default\"])(columns);\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return (0, _extends2[\"default\"])({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          (0, _devWarning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = (0, _toArray2[\"default\"])(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n\n    if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length > 1) {\n      (0, _devWarning[\"default\"])(false, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.');\n    }\n\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/My-Movies-Project/node_modules/antd/lib/table/hooks/useSelection.js"],"names":["_interopRequireDefault","require","_typeof3","Object","defineProperty","exports","value","SELECTION_NONE","SELECTION_INVERT","SELECTION_COLUMN","SELECTION_ALL","useSelection","_defineProperty2","_toArray2","_extends2","_slicedToArray2","_toConsumableArray2","_typeof2","React","_interopRequireWildcard","_DownOutlined","_treeUtil","_conductUtil","_util","_rcTable","_useMergedState3","_checkbox","_dropdown","_menu","_radio","_devWarning","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","flattenData","data","childrenColumnName","list","forEach","record","push","concat","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","fixed","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","getPopupContainer","_useMergedState","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","useCallback","keys","newCache","current","useEffect","_useMemo","useMemo","keyEntities","convertDataToEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","_useMemo2","_conductCheck","conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","slice","Set","derivedHalfSelectedKeySet","_useState","useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","add","Array","from","selectNone","transformColumns","columns","includes","col","cloneColumns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabledData","checked","_ref2","allDisabled","length","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","arrDel","arrAdd","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","findIndex","INTERNAL_COL_DEFINE","columnType","_cloneColumns","_cloneColumns2","expandColumn","restColumns","selectionColumnIndex","indexOf","column","prevCol","nextCol","mergedFixed","selectionColumn","width","columnTitle","render"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof3 = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_COLUMN = exports.SELECTION_ALL = void 0;\nexports[\"default\"] = useSelection;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// TODO: warning if use ajax!!!\nvar SELECTION_COLUMN = {};\nexports.SELECTION_COLUMN = SELECTION_COLUMN;\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\nvar SELECTION_NONE = 'SELECT_NONE';\nexports.SELECTION_NONE = SELECTION_NONE;\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = (0, React.useCallback)(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    var _a; // >>>>>>>>>>> Skip if not exists `rowSelection`\n\n\n    if (!rowSelection) {\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _devWarning[\"default\"])(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.');\n      }\n\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // >>>>>>>>>>> Support selection\n\n\n    var cloneColumns = (0, _toConsumableArray2[\"default\"])(columns);\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return (0, _extends2[\"default\"])({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          (0, _devWarning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = (0, _toArray2[\"default\"])(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat((0, _toConsumableArray2[\"default\"])(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n\n    if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length > 1) {\n      (0, _devWarning[\"default\"])(false, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.');\n    }\n\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[_rcTable.INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"]},"metadata":{},"sourceType":"script"}