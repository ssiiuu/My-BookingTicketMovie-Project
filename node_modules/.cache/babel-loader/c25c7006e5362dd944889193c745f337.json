{"ast":null,"code":"import { DAT_VE, SET_CHI_TIET_PHONG_VE } from \"../type/quanLyDatVeType\";\nimport { ThongTinPhongVe } from \"../../_core/models/ThongTinPhongVe\";\nconst initialState = {\n  chiTietPhongVe: new ThongTinPhongVe(),\n  danhSachGheDangDat: [{\n    maGhe: 79081,\n    tenGhe: \"01\",\n    maRap: 649,\n    loaiGhe: \"Thuong\",\n    stt: \"01\"\n  }]\n};\nexport const quanLyDatVeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case SET_CHI_TIET_PHONG_VE:\n      {\n        state.chiTietPhongVe = payload;\n        return { ...state\n        };\n      }\n\n    case DAT_VE:\n      {\n        let danhSachCapNhatGheDD = [...state.danhSachGheDangDat];\n        let index = danhSachCapNhatGheDD.findIndex(gheDD => {\n          gheDD.maGhe === payload.maGhe;\n        });\n\n        if (index !== -1) {\n          danhSachCapNhatGheDD.splice(index, 1);\n        } else {\n          danhSachCapNhatGheDD.push(payload);\n        }\n\n        return { ...state,\n          danhSachGheDangDat: danhSachCapNhatGheDD\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/My-Movies-Project/src/redux/reducers/quanLyDatVeReducer.js"],"names":["DAT_VE","SET_CHI_TIET_PHONG_VE","ThongTinPhongVe","initialState","chiTietPhongVe","danhSachGheDangDat","maGhe","tenGhe","maRap","loaiGhe","stt","quanLyDatVeReducer","state","type","payload","danhSachCapNhatGheDD","index","findIndex","gheDD","splice","push"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,qBAAjB,QAA8C,yBAA9C;AACA,SAASC,eAAT,QAAgC,oCAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,IAAIF,eAAJ,EADG;AAEnBG,EAAAA,kBAAkB,EAAE,CAClB;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,MAAM,EAAE,IAAxB;AAA8BC,IAAAA,KAAK,EAAE,GAArC;AAA0CC,IAAAA,OAAO,EAAE,QAAnD;AAA6DC,IAAAA,GAAG,EAAE;AAAlE,GADkB;AAFD,CAArB;AAOA,OAAO,MAAMC,kBAAkB,GAAG,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCT,YAAoC;AAAA,MAAtB;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC7E,UAAQD,IAAR;AACE,SAAKZ,qBAAL;AAA4B;AAC1BW,QAAAA,KAAK,CAACR,cAAN,GAAuBU,OAAvB;AACA,eAAO,EAAE,GAAGF;AAAL,SAAP;AACD;;AACD,SAAKZ,MAAL;AAAa;AACX,YAAIe,oBAAoB,GAAG,CAAC,GAAGH,KAAK,CAACP,kBAAV,CAA3B;AAEA,YAAIW,KAAK,GAAGD,oBAAoB,CAACE,SAArB,CAAgCC,KAAD,IAAW;AACpDA,UAAAA,KAAK,CAACZ,KAAN,KAAgBQ,OAAO,CAACR,KAAxB;AACD,SAFW,CAAZ;;AAIA,YAAIU,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBD,UAAAA,oBAAoB,CAACI,MAArB,CAA4BH,KAA5B,EAAmC,CAAnC;AACD,SAFD,MAEO;AACLD,UAAAA,oBAAoB,CAACK,IAArB,CAA0BN,OAA1B;AACD;;AACD,eAAO,EAAE,GAAGF,KAAL;AAAYP,UAAAA,kBAAkB,EAAEU;AAAhC,SAAP;AACD;;AAED;AACE,aAAO,EAAE,GAAGH;AAAL,OAAP;AArBJ;AAuBD,CAxBM","sourcesContent":["import { DAT_VE, SET_CHI_TIET_PHONG_VE } from \"../type/quanLyDatVeType\";\r\nimport { ThongTinPhongVe } from \"../../_core/models/ThongTinPhongVe\";\r\n\r\nconst initialState = {\r\n  chiTietPhongVe: new ThongTinPhongVe(),\r\n  danhSachGheDangDat: [\r\n    { maGhe: 79081, tenGhe: \"01\", maRap: 649, loaiGhe: \"Thuong\", stt: \"01\" },\r\n  ],\r\n};\r\n\r\nexport const quanLyDatVeReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_CHI_TIET_PHONG_VE: {\r\n      state.chiTietPhongVe = payload;\r\n      return { ...state };\r\n    }\r\n    case DAT_VE: {\r\n      let danhSachCapNhatGheDD = [...state.danhSachGheDangDat];\r\n\r\n      let index = danhSachCapNhatGheDD.findIndex((gheDD) => {\r\n        gheDD.maGhe === payload.maGhe;\r\n      });\r\n\r\n      if (index !== -1) {\r\n        danhSachCapNhatGheDD.splice(index, 1);\r\n      } else {\r\n        danhSachCapNhatGheDD.push(payload);\r\n      }\r\n      return { ...state, danhSachGheDangDat: danhSachCapNhatGheDD };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}